{"version":3,"sources":["main.js"],"names":["$","IntersectionObserver","entries","intersectionRatio","document","querySelector","classList","add","remove","threshold","observe","maskBehavior","val","replace","length","options","onKeyPress","e","field","mask","apply","arguments","offsetWidth","containerOffset","offset","left","css","on","ajax","url","this","dataType","success","resposta","logradouro","complemento","bairro","localidade","uf","focus","window","resize"],"mappings":"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","file":"script.js","sourcesContent":["$(function () {\n\t// sticky header\n\tvar observer = new IntersectionObserver(\n\t\tfunction (entries) {\n\t\t\t// no intersection with screen\n\t\t\tif (0 === entries[0].intersectionRatio) {\n\t\t\t\tdocument.querySelector(\"#headerBar\").classList.add(\"sticky\");\n\t\t\t}\n\n\t\t\t// fully intersects with screen\n\t\t\telse if (1 === entries[0].intersectionRatio) {\n\t\t\t\tdocument.querySelector(\"#headerBar\").classList.remove(\"sticky\");\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tthreshold: [0, 1],\n\t\t}\n\t);\n\n\tobserver.observe(document.querySelector(\"#stickyMenuTop\"));\n\n\t// masks\n\tvar maskBehavior = function (val) {\n\t\t\treturn val.replace(/\\D/g, \"\").length === 11\n\t\t\t\t? \"(00) 00000-0000\"\n\t\t\t\t: \"(00) 0000-00009\";\n\t\t},\n\t\toptions = {\n\t\t\tonKeyPress: function (val, e, field, options) {\n\t\t\t\tfield.mask(maskBehavior.apply({}, arguments), options);\n\t\t\t},\n\t\t};\n\t$(\".form-tel\").mask(maskBehavior, options);\n\t$(\".form-cep\").mask(\"00000-000\");\n\n\t// cep autofill\n\t$(\"#form-cep\").on(\"focusout\", function () {\n\t\t$.ajax({\n\t\t\t//O campo URL diz o caminho de onde virá os dados\n\t\t\t//É importante concatenar o valor digitado no CEP\n\t\t\turl: \"https://viacep.com.br/ws/\" + $(this).val() + \"/json/unicode/\",\n\t\t\t//Aqui você deve preencher o tipo de dados que será lido,\n\t\t\t//no caso, estamos lendo JSON.\n\t\t\tdataType: \"json\",\n\t\t\t//SUCESS é referente a função que será executada caso\n\t\t\t//ele consiga ler a fonte de dados com sucesso.\n\t\t\t//O parâmetro dentro da função se refere ao nome da variável\n\t\t\t//que você vai dar para ler esse objeto.\n\t\t\tsuccess: function (resposta) {\n\t\t\t\t//Agora basta definir os valores que você deseja preencher\n\t\t\t\t//automaticamente nos campos acima.\n\t\t\t\t$(\"#form-endereco\").val(resposta.logradouro);\n\t\t\t\t$(\"#form-complemento\").val(resposta.complemento);\n\t\t\t\t$(\"#form-bairro\").val(resposta.bairro);\n\t\t\t\t$(\"#form-cidade\").val(resposta.localidade);\n\t\t\t\t$(\"#form-uf\").val(resposta.uf);\n\t\t\t\t//Vamos incluir para que o Número seja focado automaticamente\n\t\t\t\t//melhorando a experiência do usuário\n\t\t\t\t$(\"#form-numero\").focus();\n\t\t\t},\n\t\t});\n\t});\n\n\t// Get container offset\n\toffsetWidth();\n\t$( window ).resize( function() {\n\t\toffsetWidth();\n\t});\n\n\tfunction offsetWidth() {\n\t\tvar containerOffset = $( '.container' ).offset().left;\n\t\t$( '.header-offset' ).css( 'width', containerOffset );\n\t}\n});\n"]}